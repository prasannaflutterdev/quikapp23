#!/bin/bash
# Generate env.g.dart file for Flutter environment variables
# This script creates a Dart file with environment variables for use in Flutter

set -euo pipefail

# Enhanced logging
log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] [ENV_G] $1"; }

# Source environment configuration
SCRIPT_DIR="$(dirname "$0")"
if [ -f "${SCRIPT_DIR}/../config/env.sh" ]; then
    source "${SCRIPT_DIR}/../config/env.sh"
    log "Environment configuration loaded from lib/config/env.sh"
elif [ -f "${SCRIPT_DIR}/../../lib/config/env.sh" ]; then
    source "${SCRIPT_DIR}/../../lib/config/env.sh"
    log "Environment configuration loaded from lib/config/env.sh"
else
    log "Environment configuration file not found, using system environment variables"
fi

# Function to safely get environment variable with fallback
get_api_var() {
    local var_name="$1"
    local fallback="$2"
    local value="${!var_name:-}"
    
    if [ -n "$value" ]; then
        log "✅ Found API variable $var_name: $value"
        printf "%s" "$value"
    else
        log "⚠️ API variable $var_name not set, using fallback: $fallback"
        printf "%s" "$fallback"
    fi
}

# Set environment variables with API priority
export WORKFLOW_ID=$(get_api_var "WORKFLOW_ID" "ios-workflow")
export APP_NAME=$(get_api_var "APP_NAME" "QuikApp")
export VERSION_NAME=$(get_api_var "VERSION_NAME" "1.0.0")
export VERSION_CODE=$(get_api_var "VERSION_CODE" "1")
export BUNDLE_ID=$(get_api_var "BUNDLE_ID" "")
export APPLE_TEAM_ID=$(get_api_var "APPLE_TEAM_ID" "")
export PUSH_NOTIFY=$(get_api_var "PUSH_NOTIFY" "false")

log "🚀 Starting env.g.dart generation..."

# Create the directory if it doesn't exist
mkdir -p lib/config

# Backup existing file
if [ -f "lib/config/env.g.dart" ]; then
    cp "lib/config/env.g.dart" "lib/config/env.g.dart.backup"
    log "📋 Backed up existing env.g.dart"
fi

# Generate the env.g.dart file
log "📝 Writing env.g.dart file..."

cat > lib/config/env.g.dart <<EOF
// 🔥 GENERATED FILE: DO NOT EDIT 🔥
//
// This file is generated by lib/scripts/utils/gen_env_g.sh
// It contains environment variables for Flutter use.
// Generated for workflow: $WORKFLOW_ID

// Environment variables for Flutter
const String kAppName = "$APP_NAME";
const String kVersionName = "$VERSION_NAME";
const int kVersionCode = $VERSION_CODE;
const String kBundleId = "$BUNDLE_ID";
const String kAppleTeamId = "$APPLE_TEAM_ID";
const bool kPushNotify = ${PUSH_NOTIFY:-false};
const String kWorkflowId = "$WORKFLOW_ID";

// Build information
const String kBuildId = "${CM_BUILD_ID:-${FCI_BUILD_ID:-unknown}}";
const String kProjectId = "${CM_PROJECT_ID:-${FCI_PROJECT_ID:-unknown}}";
const String kWorkflowName = "${CM_WORKFLOW_NAME:-${FCI_WORKFLOW_NAME:-unknown}}";
const int kBuildNumber = ${BUILD_NUMBER:-${PROJECT_BUILD_NUMBER:-0}};

// Feature flags
const bool kIsChatbot = ${IS_CHATBOT:-false};
const bool kIsDomainUrl = ${IS_DOMAIN_URL:-false};
const bool kIsSplash = ${IS_SPLASH:-false};
const bool kIsPulldown = ${IS_PULLDOWN:-false};
const bool kIsBottomMenu = ${IS_BOTTOMMENU:-false};
const bool kIsLoadInd = ${IS_LOAD_IND:-false};
const bool kIsCamera = ${IS_CAMERA:-false};
const bool kIsLocation = ${IS_LOCATION:-false};
const bool kIsMic = ${IS_MIC:-false};
const bool kIsNotification = ${IS_NOTIFICATION:-false};
const bool kIsContact = ${IS_CONTACT:-false};
const bool kIsBiometric = ${IS_BIOMETRIC:-false};
const bool kIsCalendar = ${IS_CALENDAR:-false};
const bool kIsStorage = ${IS_STORAGE:-false};

// URLs and configurations
const String kLogoUrl = "$LOGO_URL";
const String kSplashUrl = "$SPLASH_URL";
const String kSplashBgUrl = "$SPLASH_BG_URL";
const String kSplashBgColor = "$SPLASH_BG_COLOR";
const String kSplashTagline = "$SPLASH_TAGLINE";
const String kSplashTaglineColor = "$SPLASH_TAGLINE_COLOR";
const String kSplashAnimation = "$SPLASH_ANIMATION";
const int kSplashDuration = ${SPLASH_DURATION:-4};

// Firebase configurations
const String kFirebaseConfigAndroid = "$FIREBASE_CONFIG_ANDROID";
const String kFirebaseConfigIos = "$FIREBASE_CONFIG_IOS";

// Email configuration
const String kEmailSmtpServer = "$EMAIL_SMTP_SERVER";
const int kEmailSmtpPort = ${EMAIL_SMTP_PORT:-587};
const String kEmailSmtpUser = "$EMAIL_SMTP_USER";
const bool kEnableEmailNotifications = ${ENABLE_EMAIL_NOTIFICATIONS:-false};

// App Store Connect configuration
const String kAppStoreConnectKeyIdentifier = "$APP_STORE_CONNECT_KEY_IDENTIFIER";
const String kAppStoreConnectIssuerId = "$APP_STORE_CONNECT_ISSUER_ID";
const String kAppStoreConnectApiKeyUrl = "$APP_STORE_CONNECT_API_KEY_URL";

// APNS configuration
const String kApnsKeyId = "$APNS_KEY_ID";
const String kApnsAuthKeyUrl = "$APNS_AUTH_KEY_URL";

// Keystore configuration
const String kKeyStoreUrl = "$KEY_STORE_URL";
const String kCmKeyAlias = "$CM_KEY_ALIAS";

// Organization information
const String kOrgName = "$ORG_NAME";
const String kWebUrl = "$WEB_URL";
const String kUserName = "$USER_NAME";
const String kEmailId = "$EMAIL_ID";
const String kAppId = "$APP_ID";
const String kPkgName = "$PKG_NAME";
EOF

log "✅ env.g.dart generated successfully"

# Show first few lines for verification
log "🔍 Generated file preview:"
head -20 lib/config/env.g.dart | while IFS= read -r line; do
    log "   $line"
done

# Validate the generated file
if [ -f "lib/config/env.g.dart" ]; then
    log "✅ env.g.dart file created successfully"
    
    # Check if Dart is available for analysis
    if command -v dart >/dev/null 2>&1; then
        if dart analyze lib/config/env.g.dart >/dev/null 2>&1; then
            log "✅ Generated file passes Dart analysis"
        else
            log "⚠️ Generated file has Dart analysis issues (continuing anyway)"
        fi
    else
        log "⚠️ Dart not available for analysis (continuing anyway)"
    fi
else
    log "❌ Failed to create env.g.dart file"
    exit 1
fi

log "🎉 env.g.dart generation completed successfully" 