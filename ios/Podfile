# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Fix GoogleUtilities header file issues
    if target.name == 'GoogleUtilities'
      target.build_configurations.each do |config|
        # Add header search paths for GoogleUtilities
        config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/GoogleUtilities/third_party/IsAppEncrypted'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/GoogleUtilities/GoogleUtilities/UserDefaults'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/GoogleUtilities/GoogleUtilities/AppDelegateSwizzler'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/GoogleUtilities/GoogleUtilities/Reachability'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/GoogleUtilities/GoogleUtilities/Network'
      end
    end
    
    # Remove CwlCatchException if present
    if target.name == 'CwlCatchException' || target.name == 'CwlCatchExceptionSupport'
      puts "Removing #{target.name} from build"
      target.build_configurations.each do |config|
        config.build_settings['EXCLUDED_ARCHS[sdk=iphoneos*]'] = 'arm64'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end
    end
  end
  
  # Fix GoogleUtilities header files after installation
  google_utilities_path = File.join(installer.sandbox.root, 'GoogleUtilities')
  if Dir.exist?(google_utilities_path)
    puts "Fixing GoogleUtilities header files..."
    
    # Create missing header directories
    Dir.glob(File.join(google_utilities_path, '**', '*.h')).each do |header_file|
      relative_path = Pathname.new(header_file).relative_path_from(Pathname.new(google_utilities_path))
      public_dir = File.join(File.dirname(header_file), 'Public', File.dirname(relative_path))
      
      unless Dir.exist?(public_dir)
        FileUtils.mkdir_p(public_dir)
        puts "Created directory: #{public_dir}"
      end
      
      public_header = File.join(public_dir, File.basename(header_file))
      unless File.exist?(public_header)
        FileUtils.cp(header_file, public_header)
        puts "Copied header: #{File.basename(header_file)}"
      end
    end
  end
end 